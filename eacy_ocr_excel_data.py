# -*- coding: utf-8 -*-
"""Eacy OCR excel data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1twuh7f_InS3M7Hq0odlR3pipeBmTrLmH
"""

!pip install easyocr

!pip install pillow

!npm install localtunnel

!pip install -q streamlit

!pip install xlsxwriter

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import sqlite3
# import streamlit as st
# import easyocr as ocr  #OCR
# from PIL import Image #Image Processing
# import pandas as pd
# import numpy as np
# import io
# import base64
# 
# # Connect to the database
# conn = sqlite3.connect('text_database.db')
# c = conn.cursor()
# 
# # Create table for extracted text
# c.execute('''CREATE TABLE IF NOT EXISTS extracted_text
#              (text TEXT)''')
# 
# st.title("Easy OCR-Extract text from images")
# image=st.file_uploader(label="Upload your image",type=['png','jpg','jpeg'])
# 
# @st.cache_data
# def load_model():
#     reader=ocr.Reader(['en'])
#     return reader
# 
# reader=load_model()
# 
# def insert_into_database(text):
#     c.execute("INSERT INTO extracted_text VALUES (?)", (text,))
#     conn.commit()
#     st.success("Extracted text has been added to the database!")
# 
# def download_excel(text):
#     df = pd.DataFrame({'Text': text})
#     output = io.BytesIO()
#     writer = pd.ExcelWriter(output, engine='xlsxwriter')
#     df.to_excel(writer, sheet_name='Extracted Text', index=False)
#     writer.save()
#     excel_file = output.getvalue()
#     b64 = base64.b64encode(excel_file)
#     href = f'<a href="data:application/octet-stream;base64,{b64.decode()}" download="extracted_text.xlsx">Download Excel</a>'
#     return href
# 
# if image is not None:
#     input_image=Image.open(image)
#     st.image(input_image)
#     with st.spinner("Loading..."):
#         result=reader.readtext(np.array(input_image))
#         result_text=[]
#         for text in result:
#             result_text.append(text[1])
#         st.table({"Text": result_text})
#         # Insert the extracted text into the database
#         insert_into_database('\n'.join(result_text))
#         # Add a button to download the extracted text in Excel format
#         st.markdown(download_excel(result_text), unsafe_allow_html=True)
# else:
#     st.write("Upload an image")
# 
# # Close the cursor and the database connection
# c.close()
# conn.close()
#

!streamlit run app.py & npx localtunnel --port 8501